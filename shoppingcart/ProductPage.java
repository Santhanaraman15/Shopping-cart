/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.shoppingcart;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.net.UnknownHostException;
import java.util.Date;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.MongoClient;
import com.mongodb.MongoException;
import java.io.*;
import java.util.StringTokenizer;
/**
 *
 * @author Santhanaraman
 */
public class ProductPage extends javax.swing.JFrame {

    /**
     * Creates new form ProductPage
     */
    public ProductPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Description");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Description");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Description");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Description");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Description");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel11.setText("Product Name");

        jLabel12.setText("Quantity");

        jButton6.setText("Add to Cart");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Update cart");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Delete Item");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Show Cart");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Categories");
        jButton10.setActionCommand("Categories");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addComponent(jTextField1))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)))))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jTextField1)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jButton7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String temp,temp1;
        int j=0;
        ProdDesc desc = new ProdDesc();
        String pname = jLabel1.getText();
        if(pname.equals("iPhone5S"))
        {
        try {
            String[] temp2 = new String[10];
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "iPhone5S");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1);
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(28, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
           for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
           PrintWriter writer = new PrintWriter("prod1.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod1.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
            desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);           
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
        {
            String[] temp2 = new String[13];
           try {
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "MacProBook");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1);
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(28, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
          for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
           PrintWriter writer = new PrintWriter("prod1.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod1.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
           desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);       
            
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } 
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    static int i = 0;
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals("") || jTextField2.getText().equals(""))
        {
            jLabel13.setText("Enter proper item and quantity");
            return;
        }
        int q = Integer.parseInt(jTextField2.getText());
        String p_name = jTextField1.getText();
        try {
            Class.forName("com.mysql.jdbc.Driver");
             try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/shopping_cart","root","Apwbdtospt")) {
                 String simpleProc = "{ call add_to_cart(?, ?) }";
                 CallableStatement cs;
                 cs = conn.prepareCall(simpleProc);
                 cs.setString(1,p_name);
                 cs.setInt(2, q);
                 ResultSet rs=null;
                 rs = cs.executeQuery();
                 i = i+q;
                 jLabel13.setText("Added " + i +" items to Cart");
               
             }
            
         } catch (SQLException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals("") || jTextField2.getText().equals(""))
        {
            jLabel14.setText("Enter proper item and quantity");
            return;
        }
        int q = Integer.parseInt(jTextField2.getText());
        String p_name = jTextField1.getText();
        try {
            Class.forName("com.mysql.jdbc.Driver");
             try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/shopping_cart","root","Apwbdtospt")) {
                 String simpleProc = "{ call update_cart(?, ?) }";
                 CallableStatement cs;
                 cs = conn.prepareCall(simpleProc);
                 cs.setString(1,p_name);
                 cs.setInt(2, q);
                 ResultSet rs=null;
                 rs = cs.executeQuery();
                 jLabel14.setText("Item Updated in cart");
               }
            
         } catch (SQLException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().equals("") || jTextField2.getText().equals(""))
        {
            jLabel15.setText("Enter proper item and quantity");
            return;
        }
        int q = Integer.parseInt(jTextField2.getText());
        String p_name = jTextField1.getText();
        try {
            Class.forName("com.mysql.jdbc.Driver");
             try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/shopping_cart","root","Apwbdtospt")) {
                 String simpleProc = "{ call delete_from_cart(?, ?) }";
                 CallableStatement cs;
                 cs = conn.prepareCall(simpleProc);
                 cs.setString(1,p_name);
                 cs.setInt(2, q);
                 ResultSet rs=null;
                 rs = cs.executeQuery();
                 jLabel15.setText("Item deleted from cart");
             }
            
         } catch (SQLException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    @SuppressWarnings({"null", "ConstantConditions"})
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        ShowCart cart = new ShowCart();
        String p_name = null;
        int quant;
        double total;
        double price;
        int i = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");
             try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/shopping_cart","root","Apwbdtospt")) {
                 String simpleProc = "{ call show_shopping_cart() }";
                 CallableStatement cs;
                 cs = conn.prepareCall(simpleProc);
                 ResultSet rs=null;
                 rs = cs.executeQuery();
                 while(rs.next())
                 {
                    p_name=rs.getString(1);
                    cart.setjlist1(p_name);
                    quant = Integer.parseInt(rs.getString(2));
                    cart.setjlist2(quant);
                    price = Double.parseDouble(rs.getString(3));
                    cart.setjlist3(price);                 
                 }
                 cart.setjList();
                 String simpleProc1 = "{ call show_total() }";
                 CallableStatement cs1;
                 cs1 = conn.prepareCall(simpleProc1);
                 ResultSet rs1=null;
                 rs1 = cs1.executeQuery();
                 rs1.next();
                 total = Double.parseDouble(rs1.getString(1));
                 cart.setLabel1(total);
                 cart.setVisible(true);
                 setVisible(false);
             }           
         } catch (SQLException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String temp,temp1;
        int j=0;
        String pname = jLabel2.getText();
        ProdDesc desc = new ProdDesc();
        if(pname.equals("iPhone5C"))
        {
        try {
            String[] temp2 = new String[14];
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "iPhone5C");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1);
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(28, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
           for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
          PrintWriter writer = new PrintWriter("prod2.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod2.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
           desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);           
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
        {
            try {
            String[] temp2 = new String[11];
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "LenovoY510p");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1); 
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(28, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
           for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
          PrintWriter writer = new PrintWriter("prod2.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod2.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
           desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String temp,temp1;
        String pname;
        int j=0;
        pname = jLabel3.getText();
        ProdDesc desc = new ProdDesc();
        if(pname.equals("iPhone5"))
        {
            String[] temp2 = new String[10];
        try {
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "iPhone5");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1);
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(28, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
           for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
          PrintWriter writer = new PrintWriter("prod3.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod3.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
           desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
        {
            String[] temp2 = new String[12];
            try {
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "DELLinspiron");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1);
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(28, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
           for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
          PrintWriter writer = new PrintWriter("prod3.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod3.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
           desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String temp,temp1;
        int j=0;
        String pname = jLabel4.getText();
        ProdDesc desc = new ProdDesc();
        if(pname.equals("iPhone4S"))
        {
        try {
            String[] temp2 = new String[10];
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "iPhone4S");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1);
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(28, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
           for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
          PrintWriter writer = new PrintWriter("prod4.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod4.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
           desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
        {
         try {
            String[] temp2 = new String[14];
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "Sony vaio");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1);
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(28, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                //System.out.println(stringtokenizer.nextToken());
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
           for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
          PrintWriter writer = new PrintWriter("prod4.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod4.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
           desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        }   
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String temp,temp1;
        int j=0;
        String pname = jLabel5.getText();
        ProdDesc desc = new ProdDesc();
        if(pname.equals("iPhone4"))
        {
        try {
            String[] temp2 = new String[9];
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "iPhone4");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1);
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(28, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
           for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
          PrintWriter writer = new PrintWriter("prod5.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod5.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
           desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
        {
         try {
            String[] temp2 = new String[9];
            MongoClient mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("SHOPPING_CART");
            DBCollection table = db.getCollection("prod_desc");
            BasicDBObject searchQuery = new BasicDBObject();
            searchQuery.put("p_name", "iPhone4");
            BasicDBObject Description = new BasicDBObject();
            Description.put("p_desc" , 1);
            DBCursor cursor = table.find(searchQuery,Description);
            temp = cursor.next().toString();
            temp1 = temp.substring(29, temp.length()-2);
            System.out.println(temp1);
            StringTokenizer stringtokenizer = new StringTokenizer(temp1,".");
            while (stringtokenizer.hasMoreElements()) {
                temp2[j] = new String(stringtokenizer.nextToken());
                j++;
            }
           for(int k=0;k<temp2.length;k++)
                System.out.println(temp2[k]);
          PrintWriter writer = new PrintWriter("prod5.txt");
           for(String str:temp2)
               writer.println(str);
           writer.close();
           FileReader reader = new FileReader("prod5.txt");
           BufferedReader br = new BufferedReader(reader);
           desc.setTextarea(br);
           desc.setLabel1(pname);
            desc.setVisible(true);
            setVisible(false);
        } catch (UnknownHostException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ProductPage.class.getName()).log(Level.SEVERE, null, ex);
        }   
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        CategoryPage page = new CategoryPage();
        page.setLabel1("PHONE");
        page.setLabel2("LAPTOP");
        page.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductPage().setVisible(true);
            }
        });
    }
    public void setLabel1(String prod1,String price1)
    {
        jLabel1.setText(prod1);
        jLabel6.setText(price1);
    }
    public void setLabel2(String prod2,String price2)
    {
        jLabel2.setText(prod2);
        jLabel7.setText(price2);
    }
    public void setLabel3(String prod3,String price3)
    {
        jLabel3.setText(prod3);
        jLabel8.setText(price3);
    }
    public void setLabel4(String prod4, String price4)
    {
        jLabel4.setText(prod4);
        jLabel9.setText(price4);
    }
    public void setLabel5(String prod5, String price5)
    {
        jLabel5.setText(prod5);
        jLabel10.setText(price5);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
